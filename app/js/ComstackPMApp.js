"use strict";var app=angular.module("ComstackPMApp",["ui.router","ui.bootstrap","ComstackPMApp.Services","ngTagsInput","luegg.directives"]);app.config(["$urlRouterProvider","$stateProvider","configurationServiceProvider",function(a,b,c){var d=c.get(),e=d.library_path;a.otherwise("/home"),b.state("Home",{url:"/home",controller:"HomeCtrl",templateUrl:e+"/app/html/home.html"}).state("inbox",{url:"/inbox/:page",controller:"InboxCtrl",templateUrl:e+"/app/html/inbox.html"}).state("message",{url:"/message",controller:"MessageCtrl",templateUrl:e+"/app/html/message.html"}).state("conversation",{url:"/conversation/:id",controller:"ConversationCtrl",templateUrl:e+"/app/html/conversation.html"})}]);var app=angular.module("ComstackPMApp");app.provider("configurationService",function(){var a={base_url:"https://cancerchat01dev.prod.acquia-sites.com",api_url:"https://cancerchat01dev.prod.acquia-sites.com/api/v1",local_host:"cancerchatdev.localweb",authorization_header:"Basic Q1JVSzAxOnl1RGFiOG5lIQ==",access_token:"",csrf_token:"",library_path:"http://cancerchatdev.localweb:8000",max_participants:2,allow_separate_conversations:!1,share_data_storage:!0,poll_intervals:{conversations:30,messages:15,available_users:300},strings:{heading__messages:"Messages",heading__conversation_with:"Conversation with @name@",text__last_message:"Last message",text__no_conversations:"<p>You've not been part of any conversations yet!</p><p>Make sure that you've <a href=\"https://.com/friends/@user_id@\">added your friends</a> then start a new conversation.</p>",text__no_available_users:"",text__read_only:"You're currently opted out of private messaging, <a href='https://blah.com/user/account/@user_id@'>click here</a> to go the the account settings form.",text__select_messages_to_delete:"Select the messages you'd like to delete",text__select_messages_to_report:"Select the messages you'd like to report",form__new_conversation__header:"You must be friends with a person before you can send them messages. <a href='https://blah.com/user/account/@user_id@'>Find and add friends</a>",form__to__label:"To",form__to__placeholder__singular:"Enter recipients username...",form__to__placeholder__plural:"Enter recipients username...","form__text__placeholder [validation???]":"Write a message...",form__new_conversation__submit:"Send",form__reply__placeholder:"Enter your reply...",form__reply__submit:"Reply",form__report__label:"Reason for reporting",form__report__submit:"Report",link__delete:"Delete",link__report:"Report",link__block:"Block",link__no_available_users:"Find your friends",button__new_conversation:"New message",button__load_older_messages:"Load older messages",button__friends_list:"Friends list",button__ok:"OK",button__cancel:"Cancel",modal__delete_conversation__heading:"Delete conversation",modal__delete_conversation__text:"Are you sure you want to delete this conversation?",modal__report__heading:"Report conversation",modal__block__heading:"Block user",modal__block__text:"Are you sure you want to block this user?"}};"undefined"!=typeof Comstack&&"undefined"!=typeof Comstack.PMApp&&"undefined"!=typeof Comstack.PMApp.Settings&&angular.merge(a,Comstack.PMApp.Settings),this.setSettingValue=function(b,c){a[b]=c},this.get=function(){return a},this.set=function(b){a=b},this.getString=function(b,c){var d=/@(\w*)@/gi;return a.strings[b].replace(d,function(a){return a=a.replace(/@/gi,""),c[a]})},this.appSettings=a;var b=this;this.$get=function(){return{appSettings:b.appSettings,get:b.get,set:b.set,setSettingValue:b.setSettingValue,getString:b.getString}}}),app.filter("htmlsafe",["$sce",function(a){return function(b){return a.trustAsHtml(b)}}]),app.filter("truncate",[function(){return function(a,b,c){var d=a;return angular.isUndefined(a)?"":(angular.isUndefined(c)&&(c="..."),d.length>b&&(d=d.substr(0,b)+c),d)}}]),app.filter("dateFromNow",["$window",function(a){return function(b){return a.moment(b).fromNow()}}]),app.filter("formatDate",["$window",function(a){return function(b,c){return"string"!=typeof c&&(c="hh:mm MMMM Do, YYYY"),a.moment(b).format(c)}}]),app.controller("HomeCtrl",["$scope","Authentication","$timeout","$state","$location","configurationService",function(a,b,c,d,e,f){a.isAuthenticated=!1,a.message="",a.loginData={username:"basic_user_1",password:"password"},a.login=function(){var c=e.host(),g=f.get();c==g.local_host&&""==g.access_token?b.apiLogin(a.loginData.username,a.loginData.password).then(function(){console.log("Login done"),a.isAuthenticated=!0,a.message="Login done",d.go("inbox",{page:1})},function(a){console.error(a)}):d.go("inbox",{page:1})}}]),app.controller("InboxCtrl",["$scope","$window","$state","$stateParams","getCurrentUser","Conversation","configurationService","$filter",function(a,b,c,d,e,f,g,h){var i=function(){a.text_heading_messages=g.getString("heading__messages",{}),a.text_last_message=g.getString("text__last_message",{}),a.text_read_only=g.getString("text__read_only",{name:a.currentUser.user.name,user_id:a.currentUser.user.id}),a.text_link_delete=g.getString("link__delete",{}),a.text_link_report=g.getString("link__report",{}),a.button_new_conversation=g.getString("button__new_conversation",{}),a.text_no_conversations=g.getString("text__no_conversations",{user_id:a.currentUser.user.id})};a.conversations=[],a.paging={},a.currentUser={},e.get().then(function(b){a.currentUser=b.data,i()}),f.get({page:d.page}).$promise.then(function(b){a.conversations=b.data,a.paging=b.paging}),a.paging.pagesCount=0,a.pages=[],a.goToPage=function(a){c.go("inbox",{page:a})},a.previous=function(){angular.isDefined(a.paging.previous)&&a.goToPage(a.paging.current_page-1)},a.next=function(){angular.isDefined(a.paging.next)&&a.goToPage(a.paging.current_page+1)},a.fromNow=function(a){return moment(a).fromNow()},a.formatDate=function(a){return moment(a).format("hh:mm MMMM Do, YYYY")},a.computeHeading=function(b){if(angular.isUndefined(a.currentUser.user))return"";var c=b.participants,d="";return 0===c.length&&(c=b.historical_participants),c=h("filter")(c,{id:"!"+a.currentUser.user.id}),angular.forEach(c,function(a,b){var e="";b===c.length-2?e=" and ":b!==c.length-1&&(e=", "),d=d+a.name+e}),g.getString("heading__conversation_with",{name:d})}}]),app.controller("ConversationCtrl",["$scope","$window","$state","$stateParams","$filter","$sce","getCurrentUser","Conversation","configurationService",function(a,b,c,d,e,f,g,h,i){var j=i.get();a.computeHeading=function(b){var c=b.data.participants,d="";0===c.length&&(c=b.data.historical_participants),c=e("filter")(c,{id:"!"+a.currentUser.user.id}),angular.forEach(c,function(a,b){var e="";b===c.length-2?e=" and ":b!==c.length-1&&(e=", "),d=d+a.name+e}),a.conversationHeading=i.getString("heading__conversation_with",{name:d})},a.computeStrings=function(){a.text_read_only=i.getString("text__read_only",{name:a.currentUser.user.name,user_id:a.currentUser.user.id}),a.form__new_conversation__submit=i.getString("form__new_conversation__submit",{}),a.link__delete=i.getString("link__delete",{}),a.link__report=i.getString("link__report",{}),a.link__block=i.getString("link__block",{}),a.heading__messages=i.getString("heading__messages",{}),a.button__new_conversation=i.getString("button__new_conversation",{}),a.button__load_older_messages=i.getString("button__load_older_messages",{}),a.text__select_messages_to_delete=i.getString("text__select_messages_to_delete",{})},a.messages={},a.paging={},a.currentUser={},a.conversationHeading="Conversation",g.get().then(function(b){a.currentUser=b.data,a.computeStrings(),h.get({id:d.id,access_token:j.access_token}).$promise.then(function(b){a.computeHeading(b)})}),h.getMessages({id:d.id,access_token:j.access_token}).$promise.then(function(b){a.messages=b})}]),app.controller("MessageCtrl",["$scope","$state","getAvailableUsers","configurationService","Conversation","$http","$q",function(a,b,c,d,e,f,g){a.message=new e({recipients:[],text:""}),a.users=[],a.getAvailableUsers=function(a){return c.get(a).then(function(a){return a.data.map(function(a){return a})})},a.new_conversation_header=d.getString("form__new_conversation__header",{user_id:""}),a.save=function(){a.message.recipients=a.users.map(function(a){return a.id}),a.message.$save(function(a){b.go("conversation",{id:a.data.id},{reload:"conversation",inherit:!1,notify:!0})},function(a){console.log(a)})}}]);var serviceModule=angular.module("ComstackPMApp.Services",["ngResource"]);serviceModule.config(["$httpProvider",function(a){delete a.defaults.headers.common["X-Requested-With"],a.defaults.useXDomain=!0,a.defaults.withCredentials=!0}]),function(a){var b=a.module("ComstackPMApp.Services");b.factory("Authentication",["$http","$q","configurationService",function(a,b,c){var d=c.get(),e=atob(d.authorization_header.replace("Basic ","")),f=d.base_url.replace("https://","https://"+e+"@"),g=function(c,d){var e=b.defer();console.log("Starting form auth...");var g=f+"/home?destination=home",h="name="+c+"&login-do=yes&pass="+d+"&form_id=user_login_block&op=Sign+in";return a.post(g,h,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(a){console.log("Succeeded form auth..."),e.resolve(a)}).error(function(a,b){console.log("Failed form auth..."),e.reject(a)}),e.promise},h=function(){var c=b.defer();return console.log("Starting basic auth..."),a.get(f,{}).success(function(a){console.log("Succeeded basic auth..."),c.resolve(a)}).error(function(a,b){console.log("Failed basic auth..."),c.reject(a)}),c.promise},i=function(){var c=b.defer();return console.log("Starting get token..."),a.get(f+"/api/login-token",{}).success(function(a){console.log("Succeeded get token..."),c.resolve(a)}).error(function(a,b){console.log("Failed basic auth..."),c.reject(a)}),c.promise},j=function(){var c=b.defer();return console.log("Starting get token..."),a.get(f+"/api/session/token",{}).success(function(a){console.log("Succeeded get CSRFToken..."),c.resolve(a)}).error(function(a,b){console.log("Failed get CSRFToken..."),c.reject(a)}),c.promise},k=function(a,d){var e=b.defer();return h().then(function(b){console.log("Succeeded basic auth..."),g(a,d).then(function(a){console.log("Succeeded form auth..."),i().then(function(a){console.log("Succeeded get token..."),c.setSettingValue("access_token",a.access_token),j().then(function(a){console.log("Succeeded get CSRFToken..."),c.setSettingValue("csrf_token",a["X-CSRF-Token"]),e.resolve(a)},function(a){console.log("Failed CSRFToken token..."),console.log(a),e.reject(a)})},function(a){console.log("Failed get token..."),console.log(a),e.reject(a)})},function(a){console.log("Failed form auth..."),console.log(a)})},function(a){console.log("Failed basic auth..."),console.log(a)}),e.promise};return{apiLogin:k}}])}(angular);var services=angular.module("ComstackPMApp.Services");services.factory("User",["$resource","configurationService",function(a,b){var c=b.get();return a("",{},{getCurrentUser:{method:"GET",url:c.api_url+"/cs-pm/users/current-user?access_token="+c.access_token,isArray:!1},getAvailableUsers:{method:"GET",url:c.api_url+"/cs-pm/users/available-users",params:{access_token:c.access_token,"autocomplete[string]":"@search"},isArray:!1}})}]),services.factory("getCurrentUser",["User","$q",function(a,b){var c={};return c.get=function(){var c=b.defer();return a.getCurrentUser(function(a){c.resolve(a)},function(){c.reject("Unable to fetch current user")}),c.promise},c}]),services.factory("getAvailableUsers",["User","$q",function(a,b){var c={};return c.get=function(c){var d=b.defer();return a.getAvailableUsers({"autocomplete[string]":c},function(a){d.resolve(a)},function(){d.reject("Unable to fetch current user")}),d.promise},c}]);var services=angular.module("ComstackPMApp.Services");services.factory("Conversation",["$resource","configurationService",function(a,b){var c=b.get();return a(c.api_url+"/cs-pm/conversations/:id",{access_token:c.access_token,page:"@page"},{getMessages:{method:"GET",url:c.api_url+"/cs-pm/conversations/:id/messages",params:{access_token:c.access_token},isArray:!1},save:{method:"POST",headers:{"X-CSRF-Token":c.csrf_token}}})}]);