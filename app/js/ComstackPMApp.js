"use strict";function deleteConversationState(a,b){this.activate=function(c,d,e){b.open({templateUrl:c,controller:"DeleteConversationCtrl",backdrop:"static",size:"sm"}).result.then(function(b){b===!0&&a.go(d.state,d.params,{reload:d.state,inherit:!1,notify:!0})},function(){a.go(e.state,e.params)})}}function reportConversationState(a,b){this.activate=function(c,d,e){b.open({templateUrl:c,controller:"ReportConversationCtrl",backdrop:"static",size:"md",windowClass:"cs-pm-modal",backdropClass:"cs-pm-modal-backdrop"}).result.then(function(b){b===!0&&a.go(d.state,d.params,{reload:d.state,inherit:!1,notify:!0})},function(){a.go(e.state,e.params)})}}function errorState(a){this.activate=function(b,c){var d=a.get("$modal");d.open({templateUrl:b,controller:"ErrorCtrl",resolve:{error:c},backdrop:"static",size:"sm"})}}function blockUserState(a,b){this.activate=function(c,d,e){b.open({templateUrl:c,controller:"BlockUserCtrl",backdrop:"static",size:"sm",windowClass:"cs-pm-modal",backdropClass:"cs-pm-modal-backdrop"}).result.then(function(b){b===!0&&a.go(d.state,d.params,{reload:d.state,inherit:!1,notify:!0})},function(){a.go(e.state,e.params)})}}function unblockUserState(a,b){this.activate=function(c,d,e){b.open({templateUrl:c,controller:"UnblockUserCtrl",backdrop:"static",size:"sm",windowClass:"cs-pm-modal",backdropClass:"cs-pm-modal-backdrop"}).result.then(function(b){b===!0&&a.go(d.state,d.params,{reload:d.state,inherit:!1,notify:!0})},function(){a.go(e.state,e.params)})}}var templates=angular.module("ComstackPMApp.Templates",[]),app=angular.module("ComstackPMApp",["ui.router","ui.bootstrap","ComstackPMApp.Services","ngTagsInput","luegg.directives","emguo.poller","ui.scroll","ui.scroll.jqlite","ComstackPMApp.Directives","ComstackPMApp.Templates"]);app.config(["$urlRouterProvider","$stateProvider","configurationServiceProvider","$httpProvider","tagsInputConfigProvider",function(a,b,c,d,e){e.setDefaults("tagsInput",{placeholder:""}),e.setActiveInterpolation("tagsInput",{placeholder:!0}),d.interceptors.push("requestInterceptor");var f=c.get(),g=(f.library_path,f.environment);switch(g){case"local":a.otherwise("/home");break;default:a.otherwise("/inbox/1")}b.state("Home",{url:"/home",controller:"HomeCtrl",templateUrl:"html/home.html"}).state("inbox",{url:"/inbox/:page",controller:"InboxCtrl",templateUrl:"html/inbox.html"}).state("message",{url:"/message/:userId",controller:"MessageCtrl",templateUrl:"html/message.html"}).state("conversation",{url:"/conversation/:id",controller:"ConversationCtrl",templateUrl:"html/conversation.html"}).state("inbox.delete",{url:"/delete/:id",onEnter:["deleteConversationState","$stateParams",function(a,b){a.activate("html/deleteConversation.html",{state:"inbox",params:b},{state:"inbox",params:b})}]}).state("conversation.delete",{url:"/delete",onEnter:["deleteConversationState","$stateParams",function(a,b){a.activate("html/deleteConversation.html",{state:"inbox",params:{page:1}},{state:"conversation",params:b})}]}).state("inbox.report",{url:"/report/:id",onEnter:["reportConversationState","$stateParams",function(a,b){a.activate("/html/reportConversation.html",{state:"inbox",params:b},{state:"inbox",params:b})}]}).state("conversation.report",{url:"/report",onEnter:["reportConversationState","$stateParams",function(a,b){a.activate("html/reportConversation.html",{state:"conversation",params:b},{state:"conversation",params:b})}]}).state("conversation.block",{url:"/block",onEnter:["blockUserState","$stateParams",function(a,b){a.activate("html/blockUser.html",{state:"conversation",params:b},{state:"conversation",params:b})}]}).state("conversation.unblock",{url:"/unblock",onEnter:["unblockUserState","$stateParams",function(a,b){a.activate("html/unblockUser.html",{state:"conversation",params:b},{state:"conversation",params:b})}]})}]),angular.module("ComstackPMApp").run(["$templateCache",function(a){a.put("html/blockUser.html",'<div class="modal-header">\n  <button ng-click="cancel()" type="button" class="bootbox-close-button close" aria-hidden="true">Ã—</button>\n  <h4 class="modal-title" ng-bind-html="modal_block_heading | htmlsafe"></h4>\n</div>\n<div class="modal-body">\n  <div class="bootbox-body" ng-bind-html="modal_block_text | htmlsafe"></div>\n  <div class="checkbox" ng-repeat="user in users" ng-show="users.length > 1">\n    <label><input type="checkbox" ng-model="user.isSelected">{{user.name}}</label>\n  </div>\n</div>\n<div class="modal-footer">\n  <button ng-click="cancel()" type="button" class="btn btn-default" ng-bind="button_cancel"></button>\n  <button ng-click="confirm()" type="button" class="btn btn-primary" ng-bind="button_ok" ng-show="currentUser.permissions.users.block"></button>\n</div>\n'),a.put("html/conversation.html",'<div id="message" class="page-wrapper cs-pm-page-wrapper" style="display: block">\n\n  <div class="messages-header cs-pm__header clearfix" ng-cloak>\n    <h2 class="pull-left cs-pm-left"><a ui-sref="inbox({page: 1})" ui-sref-opts="{reload: true}" class="messages-trigger"><span class="icomoon icomoon-back cs-pm-icon--back"></span>{{ heading__messages }}</a></h2>\n    <div class="pull-right cs-pm-right"><a ui-sref="message" class="btn btn-default cs-pm__new-message"><span class="icomoon icomoon-speech-bubble cs-pm-icon--new-message"></span> {{ button__new_conversation }}</a></div>\n  </div>\n\n  <div class="alert alert-warning" ng-show="currentUser.preferences.read_only_mode"\n       ng-bind-html="text_read_only | htmlsafe"></div>\n\n  <div class="messages-header cs-pm__header conversation-header clearfix">\n    <h2 class="pull-left cs-pm-left" ng-cloak>{{ conversationHeading }}</h2>\n\n    <div class="conversation-actions">\n      <a href="" ui-sref="conversation.delete" class="btn btn-link btn-small delete-conversation"\n         ng-bind="link__delete"></a>\n      <a href="" ui-sref="conversation.report" class="btn btn-link btn-small report-conversation"\n         ng-show="currentUser.permissions.conversations.report"\n         ng-bind-html="link__report | htmlsafe"></a>\n      <a ng-hide="isContactBlocked" href="" ui-sref="conversation.block" class="btn btn-link btn-small"\n         ng-bind="link__block"></a>\n      <a ng-show="isContactBlocked" ui-sref="conversation.unblock" class="btn btn-link btn-small" ng-bind="link__unblock"></a>\n    </div>\n  </div>\n\n\n\n  <div id="conversation-wrapper" class="conversation-wrapper" style="max-height: 600px; overflow: auto" scroll-glue="!!glued" ng-show="isMobile">\n\n    <div class="delete-message-msg collapse">\n      <div class="alert alert-info" role="alert" ng-cloak>{{ text__select_messages_to_delete }}</div>\n    </div>\n\n    <div class="clearfix text-center">\n      <a class="btn btn-primary btn-load-more" id="load-more" ng-cloak ng-click="loadMessages(\'\', paging.cursors.after)" ng-show="isMobile && moreMessages">{{\n        button__load_older_messages }}</a>\n    </div>\n\n    <ul class="media-list" ng-show="isMobile">\n      <li ng-repeat="message in messages" buffer-size="10" padding="0.3" adapter="scrollAdapter"\n          ng-class="{\'message-own\': message.sender.id === $parent.currentUser.user.id}"\n          class="media">\n        <div ng-hide="\'Hiding this until we implement message deletion\'"\n             class="media-left checkbox-wrap">\n          <div class="checkbox"><label><input type="checkbox" value="message.id"\n                                              aria-label="Delete this message"></label></div>\n        </div>\n        <div ng-if="message.sender.id !== $parent.currentUser.user.id" class="media-left cs-pm__avatar">\n          <img class="media-object" ng-src="{{ message.sender.avatars[\'100-100\'] }}" alt="" style="width:50px;height:50px;">\n        </div>\n        <div class="cs-pm-body media-body">\n          <div class="cs-pm-message-meta message-meta small"><a\n            ng-hide="message.sender.id === $parent.currentUser.user.id" ng-href="{{ message.sender.profile }}"\n            ng-bind="message.sender.name"></a> <abbr class="timeago"\n                                                     ng-attr-title="{{message.sent | formatDate}}"\n                                                     ng-bind="message.sent | dateFromNow"></abbr></div>\n          <div class="cs-pm-message message" ng-class="{\'arrow_box\': message.sender.id != $parent.currentUser.user.id}"><p ng-bind-html="message.text | htmlsafe"></p></div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n\n  <div id="conversation-wrapper" class="conversation-wrapper" style="max-height: 600px; overflow: auto" ui-scroll-viewport scroll-glue="!!glued" ng-hide="isMobile">\n\n    <div class="delete-message-msg collapse">\n      <div class="alert alert-info" role="alert" ng-cloak>{{ text__select_messages_to_delete }}</div>\n    </div>\n\n    <ul class="media-list">\n      <li ui-scroll="message in messagesDatasource" buffer-size="10" padding="0.3" adapter="scrollAdapter"\n          ng-class="{\'message-own\': message.sender.id === $parent.currentUser.user.id}"\n          class="media">\n        <div ng-hide="\'Hiding this until we implement message deletion\'"\n             class="media-left checkbox-wrap">\n          <div class="checkbox"><label><input type="checkbox" value="message.id"\n                                              aria-label="Delete this message"></label></div>\n        </div>\n        <div ng-if="message.sender.id !== $parent.currentUser.user.id" class="media-left cs-pm__avatar">\n          <img class="media-object" ng-src="{{ message.sender.avatars[\'100-100\'] }}" alt="" style="width:50px;height:50px;">\n        </div>\n        <div class="cs-pm-body media-body">\n          <div class="cs-pm-message-meta message-meta small"><a\n            ng-hide="message.sender.id === $parent.currentUser.user.id" ng-href="{{ message.sender.profile }}"\n            ng-bind="message.sender.name"></a> <abbr class="timeago"\n                                                            ng-attr-title="{{message.sent | formatDate}}"\n                                                            ng-bind="message.sent | dateFromNow"></abbr></div>\n          <div class="cs-pm-message message" ng-class="{\'arrow_box\': message.sender.id != $parent.currentUser.user.id}"><p ng-bind-html="message.text | htmlsafe"></p></div>\n        </div>\n      </li>\n    </ul>\n\n  </div>\n\n  <div class="cs-pm-reply-wrapper reply-wrapper">\n    <div data-ng-form="newMessageForm" novalidate role="form">\n      <div class="form-group" ng-class="{\'has-error\': newMessageForm.replyText.$invalid && newMessageForm.replyText.$dirty && (newMessageForm.replyText.$error.maxlength || newMessageForm.replyText.$error.required || (newMessageForm.replyText.$error.emoji && !allow_emoji))}">\n\n         <textarea emoji\n                   class="form-control"\n                   id="replyText"\n                   name="replyText"\n                   class="form-control"\n                   ng-change="unglue()"\n                   ng-maxlength="textMaxLength"\n                   ng-disabled="currentUser.preferences.read_only_mode || !isContactAvailable"\n                   rows="3"\n                   placeholder="{{form_reply_placeholder}}"\n                   ng-model="reply.text"\n                   required></textarea>\n\n      <span class="help-block"\n            ng-show="newMessageForm.replyText.$dirty && (newMessageForm.replyText.$error.required || (newMessageForm.replyText.$error.emoji && !allow_emoji))"\n            ng-bind-html="form_text_validation_empty | htmlsafe"></span>\n      <span class="help-block"\n            ng-show="newMessageForm.replyText.$dirty && newMessageForm.replyText.$error.maxlength"\n            ng-bind-html="form_text_validation_maxlength | htmlsafe"></span>\n      <span class="help-block"\n            ng-show="newMessageForm.replyText.$dirty && (newMessageForm.replyText.$error.emojiWarning && !allow_emoji)"\n            ng-bind-html="form_text_warning_emoji | htmlsafe"></span>\n      </div>\n\n      <div class="clearfix">\n        <button id="reply-submit" ng-click="submitReply()" type="submit"\n                class="btn btn-default pull-right cs-pm-right message-trigger"\n                ng-disabled="(newMessageForm.replyText.$invalid && newMessageForm.replyText.$dirty && (newMessageForm.replyText.$error.maxlength || newMessageForm.replyText.$error.required || (newMessageForm.replyText.$error.emoji && !allow_emoji))) || currentUser.preferences.read_only_mode || !isContactAvailable || reply.text.length === 0"\n                ng-bind-html="form_reply_submit | htmlsafe"></button>\n      </div>\n    </div>\n  </div>\n\n</div>\n'),a.put("html/deleteConversation.html",'<div class="modal-header">\n  <button ng-click="cancel()" type="button" class="bootbox-close-button close" aria-hidden="true">Ã—</button>\n  <h4 class="modal-title" ng-bind-html="modal_delete_conversation__heading | htmlsafe"></h4>\n</div>\n<div class="modal-body">\n  <div class="bootbox-body" ng-bind-html="modal_delete_conversation_text | htmlsafe"></div>\n</div>\n<div class="modal-footer">\n  <button ng-click="cancel()" type="button" class="btn btn-default">Cancel</button>\n  <button ng-click="confirm()" type="button" class="btn btn-primary">OK</button>\n</div>\n'),a.put("html/error.html",'<div class="modal-header">\n  <button ng-click="cancel()" type="button" class="bootbox-close-button close" aria-hidden="true">Ã—</button>\n  <h4 class="modal-title" ng-bind-html="modal_error_heading | htmlsafe"></h4>\n</div>\n<div class="modal-body">\n  <div class="bootbox-body" ng-bind-html="errorMessage | htmlsafe"></div>\n  </br>\n\n  <div ng-click="showInner = !showInner"\n    ng-bind-html="!showInner ? error_show_text : error_hide_text  | htmlsafe" style="cursor: pointer;">\n    <span class="glyphicon glyphicon-chevron-down"></span>\n  </div>\n  <div class="panel panel-danger" ng-show="showInner">\n    <div class="panel-body" ng-bind-html="errorDetails | htmlsafe"></div>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button ng-click="cancel()" type="button" class="btn btn-default" ng-bind-html="button_ok | htmlsafe"></button>\n</div>\n'),a.put("html/home.html",'<div id="loginWait" ng-hide="isAuthenticated">Login please wait...</div>\n<div id="loginDone" ng-show="isAuthenticated"></div>\n\n<div class="col-sm-4"></div>\n<div class="col-sm-4">\n<form name="loginForm" role="form" class="form-horizontal">\n  <div class="form-group">\n    <label class="control-label">Username :</label>\n    <div>\n      <input class="form-control" type="text" placeholder="Username" id="username" data-ng-model="loginData.username" required autofocus>\n    </div>\n  </div>\n  <div class="form-group">\n    <label class="control-label">Password :</label>\n    <div>\n      <input id="password" type="password" class="form-control" placeholder="Password" data-ng-model="loginData.password" required>\n    </div>\n  </div>\n\n  <div class="form-group">\n    <div >\n      <button class="btn btn-lg btn-login btn-block" type="submit" id="login" data-ng-disabled="loginForm.$invalid" data-ng-click="login()">Log In</button>\n    </div>\n  </div>\n</form>\n  </div>\n<div class="col-sm-4"></div>\n'),a.put("html/inbox.html",'<div id="messages-wrapper"\n     class="clearfix cs-pm__wrapper"\n     style="margin-top: 10px;" ng-cloak>\n  <div id="messages" class="page-wrapper cs-pm-page-wrapper" ng-show="conversations.length">\n    <div class="messages-header cs-pm__header clearfix">\n      <h2 class="pull-left cs-pm-left" style="" ng-bind-html="text_heading_messages | htmlsafe"></h2>\n\n      <div class="pull-right cs-pm-right">\n        <a href="{{friends_link}}" class="btn btn-link btn-link-outline">{{button_friends_list}}</a>\n        <a class="btn btn-default cs-pm__new-message" ui-sref="message" ng-hide="currentUser.preferences.read_only_mode">\n          <span class="icomoon icomoon-speech-bubble cs-pm-icon--new-message"></span> {{button_new_conversation}}\n        </a>\n      </div>\n    </div>\n    <div class="alert alert-warning" ng-show="currentUser.preferences.read_only_mode"\n         ng-bind-html="text_read_only | htmlsafe"></div>\n\n    <ul class="media-list conversations-list">\n      <li class="media cs-pm-conversation" ng-class="{\'conversation--unread\': conversation.unread_count != 0}"\n          ng-repeat="conversation in conversations">\n        <div class="media-left cs-pm__avatar pull-left">\n          <img class="media-object"\n               ng-src="{{conversation.last_message.sender.avatars[\'200-200\']}}"\n               alt=""\n               style="width:50px;height:50px;">\n        </div>\n        <div class="cs-pm-body media-body">\n          <a ui-sref="conversation({id: conversation.id})" class="message-trigger">\n            <h4 class="media-heading">{{computeHeading(conversation)}}\n              <span ng-show="conversation.unread_count != 0"\n                    class="notifications-count"\n                    ng-bind="conversation.unread_count"></span>\n            </h4>\n            <span ng-switch="conversation.unread_count">\n              <strong ng-switch-default\n                      ng-bind-html="conversation.last_message.text | squish | truncate:70 | htmlsafe "></strong>\n              <p ng-switch-when="0" ng-bind-html="conversation.last_message.text | squish | truncate:70 | htmlsafe "></p>\n            </span>\n          </a>\n\n          <div class="date">\n            <span class="hidden-xs">{{text_last_message}}</span> <abbr class="timeago"\n                                                                       ng-attr-title="{{formatDate(conversation.updated)}}">{{fromNow(conversation.updated)}}</abbr>\n          </div>\n          <div class="controls">\n            <small>\n              <a ui-sref="inbox.delete({id: conversation.id})" class="delete-conversation" ng-show="currentUser.permissions.conversations.leave"\n                 ng-bind-html="text_link_delete | htmlsafe"></a>\n              <span\n                ng-show="currentUser.permissions.conversations.leave && currentUser.permissions.conversations.report"> | </span>\n              <a ui-sref="inbox.report({id: conversation.id})" href="" ng-click="report(conversation)" class="report-conversation" ng-show="currentUser.permissions.conversations.report"\n                 ng-bind-html="text_link_report | htmlsafe"></a>\n            </small>\n          </div>\n        </div>\n      </li>\n    </ul>\n\n    <div class="text-center">\n      <div class="pagination-wrapper text-center">\n        <ul class="pagination" ng-show="pages.length > 1">\n          <li ng-hide="paging.current_page === 1" class="prev first"><a ng-attr-href="#inbox/{{paging.current_page - 1}}" title="Go to previous page" ng-click="$event.preventDefault(); previous()"></a></li>\n          <li ng-repeat="page in pages"\n              ng-class="{\'active\': paging.current_page === page.number, \'first\': page.number === 1}">\n            <a ng-attr-href="{{page.url}}" ng-click=" $event.preventDefault(); goToPage(page.number)" ng-attr-title="Go to page {{page.number}}" ng-bind="page.number"></a>\n          </li>\n          <li ng-hide="paging.current_page === pages.length" class="next last"><a ng-attr-href="#inbox/{{paging.current_page + 1}}" title="Go to next page" ng-click="$event.preventDefault(); next()"></a></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div id="messages-empty" class="page-wrapper cs-pm-page-wrapper" ng-hide="conversations.length" ng-cloak>\n    <div class="messages-header cs-pm__header clearfix">\n      <h2 class="pull-left cs-pm-left" style=""><a href="" class="messages-trigger"\n                                                   ng-bind-html="text_heading_messages | htmlsafe"></a></h2>\n\n      <div class="pull-right cs-pm-right">\n        <a href="{{friends_link}}" class="btn btn-link btn-link-outline">{{button_friends_list}}</a>\n        <a class="btn btn-default cs-pm__new-message" ui-sref="message" ng-hide="currentUser.preferences.read_only_mode">\n          <span class="icomoon icomoon-speech-bubble cs-pm-icon--new-message"></span> {{button_new_conversation}}\n        </a>\n      </div>\n    </div>\n    <div class="alert alert-warning" ng-show="currentUser.preferences.read_only_mode"\n         ng-bind-html="text_read_only | htmlsafe"></div>\n    <div class="cs-pm-boxing messaging-boxing text-center" ng-bind-html="text_no_conversations | htmlsafe"></div>\n  </div>\n</div>\n'),a.put("html/message.html",'<div id="new-message" class="page-wrapper cs-pm-page-wrapper" style="display: block;">\n  <div class="messages-header cs-pm__header clearfix">\n    <h2 class="pull-left cs-pm-left"><a ui-sref="inbox({page:1})" class="messages-trigger"><span\n      class="icomoon icomoon-back cs-pm-icon--back"></span> Messages</a></h2>\n\n    <div class="pull-right cs-pm-right"><a ui-sref="inbox({page:1})" class="btn btn-default messages-trigger" ng-cloak><span\n      class="glyphicon glyphicon-remove cs-pm-icon--remove"></span> {{ cancelString }}</a></div>\n  </div>\n\n\n  <div ng-show="isContactsAvailable" data-ng-form="newMessageForm" novalidate class="cs-pm-new-wrapper new-wrapper" role="form">\n    <div class="form-group">\n      <p ng-bind-html="new_conversation_header | htmlsafe"></a></p>\n    </div>\n\n    <div class="form-group" ng-class="{\'has-error\': newMessageForm.recipients.$invalid && newMessageForm.recipients.$dirty}">\n      <div class="input-group" >\n        <div class="input-group-addon" ng-bind="form_to_label"></div>\n          <tags-input\n          class="form-control custom-tags"\n          name="recipients"\n          id="recipients"\n          allow-leftover-text="false"\n          ng-model="users"\n          placeholder="{{users.length >= maxTags ? \'\': form_to_placeholder}}"\n          display-property="name"\n          key-property="id"\n          add-from-autocomplete-only="true"\n          max-tags="{{maxTags}}"\n          on-tag-adding="$tag.id != 0"\n          required>\n          <auto-complete\n            source="getAvailableUsers($query)"\n            display-property="name"\n            template="user-template"\n          </auto-complete>\n        </tags-input>\n      </div>\n      <span class="help-block"\n        ng-show="newMessageForm.recipients.$dirty && newMessageForm.recipients.$error.required"\n        ng-bind-html="form_to_validation_empty | htmlsafe">\n      </span>\n      <span class="help-block"\n        ng-show="(newMessageForm.recipients.$dirty && !newMessageForm.recipients.$error.required && newMessageForm.recipients.$invalid && users.length > maxTags) || users.length > maxTags"\n        ng-bind-html="form_to_validation_limit_exceeded | htmlsafe">\n      </span>\n    </div>\n\n\n    <div class="form-group" ng-class="{\'has-error\': newMessageForm.message.$invalid && newMessageForm.message.$dirty && (newMessageForm.message.$error.maxlength || newMessageForm.message.$error.required || (newMessageForm.message.$error.emoji && !allow_emoji))}">\n      <textarea class="form-control"\n        emoji\n        id="message"\n        name="message"\n        ng-maxlength="textMaxLength"\n        rows="3"\n        placeholder="{{form_text_placeholder}}"\n        ng-model="message.text"\n        required></textarea>\n      <span class="help-block"\n        ng-show="newMessageForm.message.$dirty && (newMessageForm.message.$error.required || (newMessageForm.message.$error.emoji && !allow_emoji))"\n        ng-bind-html="form_text_validation_empty | htmlsafe"></span>\n      <span class="help-block"\n        ng-show="newMessageForm.message.$dirty && newMessageForm.message.$error.maxlength"\n        ng-bind-html="form_text_validation_maxlength | htmlsafe"></span>\n      <span class="help-block"\n        ng-show="newMessageForm.message.$dirty && (newMessageForm.message.$error.emojiWarning && !allow_emoji)"\n        ng-bind-html="form_text_warning_emoji | htmlsafe"></span>\n    </div>\n    <div class="clearfix">\n      <button type="submit"\n              ng-disabled="(newMessageForm.recipients.$invalid || (newMessageForm.message.$invalid && (newMessageForm.message.$error.maxlength || newMessageForm.message.$error.required || (newMessageForm.message.$error.emoji && !allow_emoji)))) || currentUser.preferences.read_only_mode"\n              class="btn btn-default pull-right cs-pm-right message-trigger"\n              ng-click="save()" ng-bind="form_new_conversation_submit">\n      </button>\n    </div>\n    <script type="text/ng-template" id="user-template">\n      <div>\n        <div style="float: left">\n          <img class="media-object" ng-show="data.avatars[\'200-200\'] !=\'\'"\n               ng-src="{{data.avatars[\'200-200\']}}"\n               alt=""\n               style="width:50px;height:50px;">\n        </div>\n        <div style="float:left; margin-left: 5px">\n          <div><span ng-bind-html="$highlight(data.name)"></span></div>\n        </div>\n      </div>\n    </script>\n  </div>\n  <div ng-hide="isContactsAvailable" class="cs-pm-boxing messaging-boxing">\n    <div class="form-group text-center" ng-cloak>\n      <h1 class="text-muted" style="font-size: 60px;">!</h1>\n      <p>{{ text_no_friends }}</p>\n      <p><a ng-href="{{ friends_link }}" class="btn btn-primary">{{ text_friends_link }}</a></p>\n    </div>\n  </div>\n</div>\n'),a.put("html/reportConversation.html",'<div class="modal-header">\n  <button type="button" ng-click="cancel()" class="bootbox-close-button close" aria-hidden="true">Ã—</button>\n  <h4 class="modal-title" ng-bind-html="modal_report_heading | htmlsafe"></h4>\n</div>\n<div class="modal-body">\n  <div class="bootbox-body">Reason for reporting:</div>\n  <form name="reportForm" ng-submit="save()" class="form-horizontal">\n    <div class="checkbox">\n      <label><input type="checkbox" ng-model="data.isSpam">Spam or unsolicited advertising</label>\n    </div>\n    <div class="checkbox">\n      <label><input type="checkbox" ng-model="data.isAbuse">Abusive or offensive</label>\n    </div>\n    <div class="checkbox">\n      <label><input type="checkbox" ng-model="data.isBreach">Is in breach of forum terms and conditions</label>\n    </div>\n    <div class="checkbox">\n      <label><input type="checkbox" ng-model="data.isUnknown">It\'s from someone I don\'t know</label>\n    </div>\n    <div class="checkbox"><label><input type="checkbox" ng-model="data.isOther">Other - please give details</label>\n    </div>\n    <textarea class="form-control"\n              ng-show="data.isOther"\n              id="otherDetails"\n              name="otherDetails"\n              ng-maxlength="{{ other_reason_maxlength }}"\n              rows="3"\n              placeholder="Write details"\n              ng-model="data.otherDetails"\n              ng-required="data.isOther"></textarea>\n  </form>\n</div>\n<div class="modal-footer">\n  <button ng-click="cancel()" type="button" class="btn btn-default">Cancel</button>\n  <button ng-click="confirm()"\n          type="button"\n          class="btn btn-default report-close-trigger"\n          ng-disabled="reportForm.$invalid || (!data.isSpam && !data.isAbuse && !data.isBreach && !data.isUnknown && !data.isOther)">Report</button>\n</div>\n'),a.put("html/unblockUser.html",'<div class="modal-header">\n  <button ng-click="cancel()" type="button" class="bootbox-close-button close" aria-hidden="true">Ã—</button>\n  <h4 class="modal-title" ng-bind-html="modal_unblock_heading | htmlsafe"></h4>\n</div>\n<div class="modal-body">\n  <div class="bootbox-body" ng-bind-html="modal_unblock_text | htmlsafe"></div>\n  <div class="checkbox" ng-repeat="user in blockedUsers" ng-show="blockedUsers.length > 1">\n    <label><input type="checkbox" ng-model="user.isSelected">{{user.name}}</label>\n  </div>\n</div>\n<div class="modal-footer">\n  <button ng-click="cancel()" type="button" class="btn btn-default" ng-bind="button_cancel"></button>\n  <button ng-click="confirm()" type="button" class="btn btn-primary" ng-bind="button_ok" ng-show="currentUser.permissions.users.block"></button>\n</div>\n')}]);var app=angular.module("ComstackPMApp");app.provider("configurationService",function(){var a={base_url:"",api_url:"",local_host:"",environment:"",authorization_header:"",access_token:"",csrf_token:"",lastMessageId:9999,library_path:"",max_participants:2,text__maxlength:1e5,allow_emoji:!1,allow_separate_conversations:!1,share_data_storage:!0,http_error:!1,poll_intervals:{conversations:30,messages:15,available_users:300,user_is_available:15},strings:{heading__messages:"Messages",heading__conversation_with:"Conversation with @participants@",text__last_message:"Last message",text__no_available_users:"",text__read_only:'You\'re currently opted out of private messaging, <a href="@base_url@/user/@user_id@/account-settings">click here</a> to go the the account settings form.',text__select_messages_to_delete:"Select the messages you'd like to delete",text__select_messages_to_report:"Select the messages you'd like to report",text__no_conversations:"<p>You've not been part of any conversations yet!</p><p>Make sure that you've <a href=\"@base_url@/friends/@user_id@\">added your friends</a> then start a new conversation.</p>",text__no_conversations_no_friends:"You need to add contacts before you start a conversation.",form__new_conversation__header:'You must be friends with a person before you can send them messages. <a href="@base_url@/user/@user_id@/account-settings">Find and add friends</a>',form__to__label:"To",form__to__placeholder__singular:"Enter recipients username...",form__to__placeholder__plural:"Enter recipients username...",form__to__validation__limit_exceeded:"You cannot contact more than @number_label@ at once",form__to__validation__empty:"Who would you like to talk to?",form__text__placeholder:"Write a message...",form__text__maxlength:1e5,form__text__validation__empty:"You'll need to enter some text here...",form__text__validation__maxlength:"You can only have @@number@@ characters per message",form__text__warning__emoji:"Emoji will be replaced with space",form__new_conversation__submit:"Send",form__reply__placeholder:"Enter your reply...",form__reply__submit:"Reply",form__report__label:"Reason for reporting",form__report__submit:"Report",link__delete:"Delete",link__report:"Report",link__block:"Block",link__unblock:"Unblock",link__no_available_users:"Find your friends",button__new_conversation:"New message",button__load_older_messages:"Load older messages",button__friends_list:"Friends list",button__ok:"OK",button__cancel:"Cancel",modal__delete_conversation__heading:"Delete conversation",modal__delete_conversation__text:"Are you sure you want to delete this conversation?",modal__report__heading:"Report conversation",modal__block__heading:"Block user",modal__block__text:"Are you sure you want to block the user @name@?",modal__block__text__multiple:"Who would you like to block?",modal__block__text__not_allowed:"You cannot block this user.",modal__unblock__heading:"Unblock user",modal__unblock__text:"Are you sure you want to unblock the user @name@?",modal__unblock__text__multiple:"Users I want to unblock:",modal__unblock__text__not_allowed:"You cannot unblock this user.",modal__error__heading:"Error",error__no_connection:"We're having trouble contacting the server, are you connected to the internet?",error__api_bad_response:"The API returned an error so something has gone wrong.",error__show_text:"Show the error",error__hide_text:"Hide the error",error__details:"@status@: @error@."}};"undefined"!=typeof Comstack&&"undefined"!=typeof Comstack.PMApp&&"undefined"!=typeof Comstack.PMApp.Settings&&angular.merge(a,Comstack.PMApp.Settings),this.setSettingValue=function(b,c){a[b]=c},this.get=function(){return a},this.getSetting=function(b){var c=a;return angular.isString(b)&&(b=[b]),angular.isArray(b)?(angular.forEach(b,function(a){c=c[a]}),c):""},this.set=function(b){a=b},this.getString=function(b,c){c=c||{};var d=/@(\w*)@/gi;return a.strings[b].replace(d,function(a){
return a=a.replace(/@/gi,""),c[a]})},this.appSettings=a;var b=this;this.$get=function(){return{appSettings:b.appSettings,get:b.get,set:b.set,getSetting:b.getSetting,setSettingValue:b.setSettingValue,getString:b.getString}}});var directiveModule=angular.module("ComstackPMApp.Directives",[]),directives=angular.module("ComstackPMApp.Directives");directives.directive("emoji",function(){return{restrict:"EA",require:"ngModel",link:function(a,b,c,d){d.$parsers.unshift(function(a){var b=/(0\u20E3|1\u20E3|2\u20E3|3\u20E3|4\u20E3|5\u20E3|6\u20E3|7\u20E3|8\u20E3|9\u20E3|#\u20E3|\*\u20E3|\uD83C(\uDDE6\uD83C(\uDDE8|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDEE|\uDDF1|\uDDF2|\uDDF4|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFC|\uDDFD|\uDDFF)|\uDDE7\uD83C(\uDDE6|\uDDE7|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDEE|\uDDEF|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFB|\uDDFC|\uDDFE|\uDDFF)|\uDDE8\uD83C(\uDDE6|\uDDE8|\uDDE9|\uDDEB|\uDDEC|\uDDED|\uDDEE|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF5|\uDDF7|\uDDFA|\uDDFB|\uDDFC|\uDDFD|\uDDFE|\uDDFF)|\uDDE9\uD83C(\uDDEA|\uDDEC|\uDDEF|\uDDF0|\uDDF2|\uDDF4|\uDDFF)|\uDDEA\uD83C(\uDDE6|\uDDE8|\uDDEA|\uDDEC|\uDDED|\uDDF7|\uDDF8|\uDDF9|\uDDFA)|\uDDEB\uD83C(\uDDEE|\uDDEF|\uDDF0|\uDDF2|\uDDF4|\uDDF7)|\uDDEC\uD83C(\uDDE6|\uDDE7|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDEE|\uDDF1|\uDDF2|\uDDF3|\uDDF5|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFC|\uDDFE)|\uDDED\uD83C(\uDDF0|\uDDF2|\uDDF3|\uDDF7|\uDDF9|\uDDFA)|\uDDEE\uD83C(\uDDE8|\uDDE9|\uDDEA|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF6|\uDDF7|\uDDF8|\uDDF9)|\uDDEF\uD83C(\uDDEA|\uDDF2|\uDDF4|\uDDF5)|\uDDF0\uD83C(\uDDEA|\uDDEC|\uDDED|\uDDEE|\uDDF2|\uDDF3|\uDDF5|\uDDF7|\uDDFC|\uDDFE|\uDDFF)|\uDDF1\uD83C(\uDDE6|\uDDE7|\uDDE8|\uDDEE|\uDDF0|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFB|\uDDFE)|\uDDF2\uD83C(\uDDE6|\uDDE8|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF5|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFB|\uDDFC|\uDDFD|\uDDFE|\uDDFF)|\uDDF3\uD83C(\uDDE6|\uDDE8|\uDDEA|\uDDEB|\uDDEC|\uDDEE|\uDDF1|\uDDF4|\uDDF5|\uDDF7|\uDDFA|\uDDFF)|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C(\uDDE6|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF7|\uDDF8|\uDDF9|\uDDFC|\uDDFE)|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C(\uDDEA|\uDDF4|\uDDF8|\uDDFA|\uDDFC)|\uDDF8\uD83C(\uDDE6|\uDDE7|\uDDE8|\uDDE9|\uDDEA|\uDDEC|\uDDED|\uDDEE|\uDDEF|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF7|\uDDF8|\uDDF9|\uDDFB|\uDDFD|\uDDFE|\uDDFF)|\uDDF9\uD83C(\uDDE6|\uDDE8|\uDDE9|\uDDEB|\uDDEC|\uDDED|\uDDEF|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF7|\uDDF9|\uDDFB|\uDDFC|\uDDFF)|\uDDFA\uD83C(\uDDE6|\uDDEC|\uDDF2|\uDDF8|\uDDFE|\uDDFF)|\uDDFB\uD83C(\uDDE6|\uDDE8|\uDDEA|\uDDEC|\uDDEE|\uDDF3|\uDDFA)|\uDDFC\uD83C(\uDDEB|\uDDF8)|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C(\uDDEA|\uDDF9)|\uDDFF\uD83C(\uDDE6|\uDDF2|\uDDFC)))|([\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2694\u2696\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD79\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED0\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3]|\uD83E[\uDD10-\uDD18\uDD80-\uDD84\uDDC0])/g;if(d.$isEmpty(a))return d.$setValidity("emoji",!0),d.$setValidity("emojiWarning",!0),a;if(b.test(a)){var c=a.replace(b,"");return/\S/.test(c)?(d.$setValidity("emoji",!0),d.$setValidity("emojiWarning",!1),a):(d.$setValidity("emoji",!1),d.$setValidity("emojiWarning",!0),a)}return d.$setValidity("emoji",!0),d.$setValidity("emojiWarning",!0),a})}}}),app.filter("squish",[function(){return function(a,b){var c=a;return"string"!=typeof a?a:(void 0===b&&(b=!0),b&&(c=c.replace(/<[^>]+>/gm,"")),c.replace(/(\s+)/g," "))}}]),app.filter("htmlsafe",["$sce",function(a){return function(b){return a.trustAsHtml(b)}}]),app.filter("truncate",[function(){return function(a,b,c){var d=a;return angular.isUndefined(a)?"":(angular.isUndefined(c)&&(c="..."),d.length>b&&(d=d.substr(0,b)+c),d)}}]),app.filter("dateFromNow",["$window",function(a){return function(b){return a.moment(b).fromNow()}}]),app.filter("formatDate",["$window",function(a){return function(b,c){return"string"!=typeof c&&(c="hh:mm MMMM Do, YYYY"),a.moment(b).format(c)}}]),app.controller("HomeCtrl",["$scope","Authentication","$timeout","$state","$location","configurationService",function(a,b,c,d,e,f){a.isAuthenticated=!1,a.message="",a.loginData={username:"basic_user_1",password:"password"},a.login=function(){var c=e.host(),g=f.get();c==g.local_host&&""==g.access_token?b.apiLogin(a.loginData.username,a.loginData.password).then(function(){console.log("Login done"),a.isAuthenticated=!0,a.message="Login done",d.go("inbox",{page:1})},function(a){console.log(a)}):d.go("inbox",{page:1})}}]),app.controller("InboxCtrl",["$scope","$window","$state","$stateParams","getCurrentUser","Conversation","configurationService","$filter","poller",function(a,b,c,d,e,f,g,h,i){var j=g.get(),k=function(){a.paging.pagesCount=b.Math.ceil(a.paging.total/a.paging.range);for(var c=0;c<a.paging.pagesCount;c++)a.pages[c]={number:c+1,url:"#/inbox/"+(c+1)}},l=function(){a.text_heading_messages=g.getString("heading__messages"),a.text_last_message=g.getString("text__last_message"),a.text_read_only=g.getString("text__read_only",{base_url:j.base_url,name:a.currentUser.user.name,user_id:a.currentUser.user.id}),a.text_link_delete=g.getString("link__delete"),a.text_link_report=g.getString("link__report"),a.button_new_conversation=g.getString("button__new_conversation"),a.text_no_conversations=g.getString("text__no_conversations",{base_url:j.base_url,user_id:a.currentUser.user.id}),a.button_friends_list=g.getString("button__friends_list"),a.friends_link=j.base_url+"/friends/"+a.currentUser.user.id};a.goToPage=function(a){c.go("inbox",{page:a})},a.previous=function(){angular.isDefined(a.paging.previous)&&a.goToPage(a.paging.current_page-1)},a.next=function(){angular.isDefined(a.paging.next)&&a.goToPage(a.paging.current_page+1)},a.fromNow=function(a){return moment(a).fromNow()},a.formatDate=function(a){return moment(a).format("hh:mm MMMM Do, YYYY")},a.computeHeading=function(b){if(angular.isUndefined(a.currentUser.user))return"";var c=h("filter")(b.participants,{id:"!"+a.currentUser.user.id});0===c.length&&(c=h("filter")(b.historical_participants,{id:"!"+a.currentUser.user.id}));var d="";return angular.forEach(c,function(a,b){var e="";b===c.length-2?e=" and ":b!==c.length-1&&(e=", "),d=d+a.name+e}),d},a.conversations=[],a.paging={},a.currentUser={},a.conversationsPollDelay=1e3*g.getSetting(["poll_intervals","conversations"]),e.get().then(function(b){a.currentUser=b.data,l()});var m=i.get(f,{action:"get",argumentsArray:[{page:d.page}],delay:a.conversationsPollDelay});m.promise.then(null,null,function(b){angular.equals(a.conversations,b.data)||(a.conversations=b.data),a.paging=b.paging,k(),a.currentUser.preferences.read_only_mode&&m.stop()}),a.paging.pagesCount=0,a.pages=[]}]),app.controller("ConversationCtrl",["$scope","$window","$state","$stateParams","$filter","$sce","getCurrentUser","User","Conversation","configurationService","$timeout","poller",function(a,b,c,d,e,f,g,h,i,j,k,l){console.log(b.isMobile),a.isMobile=b.isMobile.any;var m,n,o=j.get(),p=function(){i.markAsRead({id:d.id},{}).$promise.then(function(a){})},q=function(b,c){var d=[];return a.glued=c,b.data.length>0&&(b.data[0].id>a.lastMessageId?a.lastMessageId=b.data[0].id:a.lastMessageId,j.setSettingValue("lastMessageId",a.lastMessageId),a.paging=b.paging,d.push.apply(d,b.data),d=e("orderBy")(d,"id"),d.length<10?a.moreMessages=!1:a.moreMessages=!0),d},r=function(b){var c=b.participants,d="";0===c.length&&(c=b.historical_participants),c=e("filter")(c,{id:"!"+a.currentUser.user.id}),angular.forEach(c,function(a,b){var e="";b===c.length-2?e=" and ":b!==c.length-1&&(e=", "),d=d+a.name+e}),a.conversationHeading=j.getString("heading__conversation_with",{participants:d})},s=function(){a.text_read_only=j.getString("text__read_only",{name:a.currentUser.user.name,user_id:a.currentUser.user.id}),a.textMaxLength=o.text__maxlength,a.allow_emoji=o.allow_emoji,a.form_reply_submit=j.getString("form__reply__submit"),a.link__delete=j.getString("link__delete"),a.link__report=j.getString("link__report"),a.link__block=j.getString("link__block"),a.link__unblock=j.getString("link__unblock"),a.heading__messages=j.getString("heading__messages"),a.button__new_conversation=j.getString("button__new_conversation"),a.button__load_older_messages=j.getString("button__load_older_messages"),a.text__select_messages_to_delete=j.getString("text__select_messages_to_delete"),a.form_reply_placeholder=j.getString("form__reply__placeholder"),a.form_text_validation_maxlength=j.getString("form__text__validation__maxlength",{number:a.textMaxLength}),a.form_text_validation_empty=j.getString("form__text__validation__empty"),a.form_text_warning_emoji=j.getString("form__text__warning__emoji")},t=function(b){if(angular.isUndefined(a.currentUser.user))return a.isContactAvailable=!1,void(a.isContactBlocked=!1);var c=e("filter")(b.participants,{id:"!"+a.currentUser.user.id}),d=c[0].id;n=l.get(h,{action:"getBlockedUsers",argumentsArray:[{"filter[user]":d}],delay:a.availabilityDelay,smart:!0}),n.promise.then(null,null,function(b){return a.isContactBlocked=b.data.length>0&&1===e("filter")(b.data,{user:{id:d}}).length,a.isContactBlocked?void(a.isContactAvailable=!1):void h.getAvailableUsers({"filter[id]":d}).$promise.then(function(b){a.isContactAvailable=b.hasOwnProperty("data")&&1===e("filter")(b.data,{id:d}).length})})},u=function(a,b){return function(c){return c[a]>b}};a.paging={},a.glued=!0,a.messages=[],a.lastIndex=0,a.scrollCalls=0,a.paging={},a.currentUser={},a.reply={text:""},a.loadMessagesCalles=0,a.conversationHeading="Conversation",a.isContactAvailable=!1,a.isContactBlocked=!1,a.scrollAdapter={},a.moreMessages=!1,a.messagesPollDelay=1e3*j.getSetting(["poll_intervals","messages"]),a.availabilityDelay=1e3*j.getSetting(["poll_intervals","user_is_available"]),a.lastMessageId=0,a.scrollPosition="bottom",a.loadMessages=function(b,c){a.loadMessagesCalles++,i.getMessages({id:d.id,before:b,after:c}).$promise.then(function(b){var c=[];c=0==a.messages.length?q(b,!0):q(b,!1),a.messages.push.apply(a.messages,c),a.messages=e("orderBy")(a.messages,"id"),console.log(a.messages),p()})},a.messagesDatasource={get:function(b,c,e){if(a.isMobile)e([]);else{var f="",g="",h="",j="";a.scrollCalls<3?(1==b&&(a.scrollCalls++,k(function(){i.getMessages({id:d.id,before:"",after:""}).$promise.then(function(a){e(q(a,!0)),p()})})),b==1-c&&(a.scrollCalls++,i.getMessages({id:d.id,after:a.paging.cursors.after,before:""}).$promise.then(function(b){e(q(b,!1)),a.scrollPosition="bottom"})),b==c+1&&(a.scrollCalls++,k(function(){e([])}))):null!==a.paging.next||null!==a.paging.previous?(a.scrollCalls++,angular.isUndefined(a.paging.next)||(f=a.paging.cursors.after),angular.isUndefined(a.paging.previous)||(g=a.paging.cursors.before),j=g,h=f,b>a.lastIndex?h="":j="",k(function(){i.getMessages({id:d.id,before:j,after:h}).$promise.then(function(c){c.data.length<10?(p(),b>=a.lastIndex?a.scrollPosition="bottom":a.scrollPosition="top"):c.data[0].id==o.lastMessageId?a.scrollPosition="bottom":a.scrollPosition="between",e(q(c,!1)),a.lastIndex=b})})):e([])}}},a.unglue=function(){a.glued=!1},a.submitReply=function(){i.reply({id:d.id},a.reply).$promise.then(function(b){a.glued=!0,j.setSettingValue("lastMessageId",b.data[0].id),a.lastMessageId=b.data[0].id,a.isMobile?a.messages.push(b.data[0]):a.scrollAdapter.append([b.data[0]]),a.reply.text="",a.newMessageForm.$setPristine(),k(function(){a.glued=!1})})},g.get().then(function(b){a.currentUser=b.data,s(),i.get({id:d.id,access_token:o.access_token}).$promise.then(function(b){p(),r(b.data),t(b.data),a.isMobile&&a.loadMessages("","")})}),m=l.get(i,{action:"getMessages",argumentsArray:[{id:d.id,range:50,poll:!0}],delay:a.messagesPollDelay,smart:!0}),m.promise.then(null,null,function(b){var c=[];console.log("messages poll try"),0==b.data.length&&console.log(a.glued),a.scrollCalls>=3&&b.data.length>0&&(c.push.apply(c,b.data),c=e("filter")(c,u("id",a.lastMessageId),!0),c=e("orderBy")(c,"id"),c.length>0&&(a.isMobile?(a.messages.push.apply(a.messages,c),a.messages=e("orderBy")(a.messages,"id"),p()):(a.scrollAdapter.append(c),"bottom"==a.scrollPosition&&(p(),a.glued=!0),console.log(a.scrollPosition),k(function(){a.glued=!1}))),b.data[0].id>a.lastMessageId?a.lastMessageId=b.data[0].id:a.lastMessageId,j.setSettingValue("lastMessageId",a.lastMessageId),console.log("messages poll done"),console.log(c)),angular.isUndefined(a.currentUser.user)?l.stopAll():angular.isUndefined(a.currentUser.preferences)?l.stopAll():!angular.isUndefined(a.currentUser.preferences.read_only_mode)&&a.currentUser.preferences.read_only_mode&&l.stopAll()})}]),app.controller("MessageCtrl",["$scope","$state","getAvailableUsers","configurationService","Conversation","getCurrentUser","$stateParams","$filter",function(a,b,c,d,e,f,g,h){var i=d.get();a.requiredUsers=g.userId,a.currentUser={},a.maxTags=i.max_participants-1,a.isContactsAvailable=!0,c.get().then(function(b){if(a.isContactsAvailable=b.data.length>0,a.requiredUsers)for(var c=a.requiredUsers.split(","),d=a.maxTags<c.length?a.maxTags:c.length,e=0;d>e;e++){var f=h("filter")(b.data,{id:c[e]});f.length>0&&a.users.push(f[0])}}),a.cancelString=d.getString("button__cancel"),a.text_friends_link=d.getString("link__no_available_users"),a.text_no_friends=d.getString("text__no_conversations_no_friends"),f.get().then(function(b){a.currentUser=b.data,a.new_conversation_header=d.getString("form__new_conversation__header",{base_url:i.base_url,user_id:a.currentUser.user.id}),a.friends_link=i.base_url+"/friends/"+a.currentUser.user.id}),a.allow_emoji=i.allow_emoji;var j="";a.textMaxLength=i.text__maxlength,a.form_to_label=d.getString("form__to__label"),1==a.maxTags?(a.form_to_placeholder=d.getString("form__to__placeholder__singular"),j="1 person"):(a.form_to_placeholder=d.getString("form__to__placeholder__plural"),j="2 people"),a.form_to_validation_empty=d.getString("form__to__validation__empty"),a.form_to_validation_limit_exceeded=d.getString("form__to__validation__limit_exceeded",{number_label:j}),a.form_text_placeholder=d.getString("form__text__placeholder"),a.form_text_validation_empty=d.getString("form__text__validation__empty"),a.form_text_validation_maxlength=d.getString("form__text__validation__maxlength",{number:a.textMaxLength}),a.form_new_conversation_submit=d.getString("form__new_conversation__submit"),a.form_text_warning_emoji=d.getString("form__text__warning__emoji"),a.message=new e({recipients:[],text:""}),a.newMessageForm={},a.users=[],a.checkEmptyTag=function(a){return 0!=a.id},a.getAvailableUsers=function(b){return a.noResults="",c.get(b).then(function(b){return 0==b.data.length?(a.noResults="No users found",[{id:0,name:"not found",avatars:{"200-200":""}}]):b.data.map(function(a){return a})})},a.safeText="",a.preventUndefined=function(){},a.save=function(){a.message.recipients=a.users.map(function(a){return a.id}),a.message.$save(function(a){b.go("conversation",{id:a.data.id},{reload:"conversation",inherit:!1,notify:!0})},function(a){console.log(a)})}}]),app.controller("DeleteConversationCtrl",["$scope","$modalInstance","Conversation","$stateParams","configurationService",function(a,b,c,d,e){a.modal_delete_conversation__heading=e.getString("modal__delete_conversation__heading"),a.modal_delete_conversation_text=e.getString("modal__delete_conversation__text"),a.cancel=function(){b.dismiss("cancel")},a.confirm=function(){c.get({id:d.id,access_token:e.getSetting("access_token")}).$promise.then(function(a){a.$delete({id:a.data.id},function(){b.close(!0)},function(a){console.log(a)})})}}]),app.controller("ReportConversationCtrl",["$scope","$modalInstance","Conversation","$stateParams","configurationService",function(a,b,c,d,e){var f={isSpam:"spam",isAbuse:"abuse",isBreach:"breach",isUnknown:"unknown",isOther:"other"};a.modal_report_heading=e.getString("modal__report__heading"),a.other_reason_maxlength=e.getSetting("text__maxlength"),a.data={isSpam:!1,isAbuse:!1,isBreach:!1,isUnknown:!1,isOther:!1,otherDetails:""},a.cancel=function(){b.dismiss("cancel")},a.confirm=function(){var e={conversation_id:d.id,reasons:[],other_reason:a.data.otherDetails,posts:[]};a.data.isSpam?e.reasons.push(f.isSpam):"",a.data.isAbuse?e.reasons.push(f.isAbuse):"",a.data.isBreach?e.reasons.push(f.isBreach):"",a.data.isUnknown?e.reasons.push(f.isUnknown):"",a.data.isOther?e.reasons.push(f.isOther):"",c.report({},e,function(){b.close(!0)},function(a){console.log(a)})}}]),app.controller("BlockUserCtrl",["$scope","$modalInstance","$stateParams","configurationService","Conversation","getCurrentUser","$filter","User",function(a,b,c,d,e,f,g,h){var i=function(b){return angular.isUndefined(a.currentUser.user)?[]:(b.participants.forEach(function(b){a.users.push(b)}),0===a.users.length&&b.historical_participants.forEach(function(b){a.users.push(b)}),void(a.users=g("filter")(a.users,{id:"!"+a.currentUser.user.id})))};a.currentUser={},a.users=[],a.modal_block_heading=d.getString("modal__block__heading"),a.button_ok=d.getString("button__ok"),a.button_cancel=d.getString("button__cancel"),f.get().then(function(b){a.currentUser=b.data,e.get({id:c.id,access_token:d.getSetting("access_token")}).$promise.then(function(b){i(b.data),a.currentUser.permissions.users.block?1==a.users.length?(a.modal_block_text=d.getString("modal__block__text",{name:a.users[0].name}),a.users[0].isSelected=!0):a.modal_block_text=d.getString("modal__block__text__multiple"):a.modal_block_text=d.getString("modal__block__text__not_allowed")})}),a.cancel=function(){b.dismiss("cancel")},a.confirm=function(){angular.forEach(a.users,function(c,d){c.isSelected&&h.block({user:c.id},function(){c.isBlocked=!0},function(a){console.log(a)}).$promise.then(function(){d===a.users.length-1&&b.close(!0)})})}}]),app.controller("UnblockUserCtrl",["$scope","$modalInstance","$stateParams","configurationService","Conversation","getCurrentUser","$filter","User",function(a,b,c,d,e,f,g,h){var i=function(b){var c=[];return angular.isUndefined(a.currentUser.user)?[]:(b.participants.forEach(function(a){c.push(a)}),0===c.length&&b.historical_participants.forEach(function(a){c.push(a)}),c=g("filter")(c,{id:"!"+a.currentUser.user.id}),void c.forEach(function(b){h.getBlockedUsers({"filter[user]":b.id,access_token:d.getSetting("access_token")}).$promise.then(function(b){b.data.length>0&&(a.blockedUsers.push(b.data[0].user),a.relations[b.data[0].user.id]=b.data[0].id,a.currentUser.permissions.users.block?1==a.blockedUsers.length?(a.modal_unblock_text=d.getString("modal__unblock__text",{name:a.blockedUsers[0].name}),a.blockedUsers[0].isSelected=!0):a.modal_unblock_text=d.getString("modal__unblock__text__multiple"):a.modal_unblock_text=d.getString("modal__unblock__text__not_allowed"))})}))};a.currentUser={},a.blockedUsers=[],a.relations=[],a.modal_unblock_heading=d.getString("modal__unblock__heading"),a.button_ok=d.getString("button__ok"),a.button_cancel=d.getString("button__cancel"),f.get().then(function(b){a.currentUser=b.data,e.get({id:c.id,access_token:d.getSetting("access_token")}).$promise.then(function(a){i(a.data)})}),a.cancel=function(){b.dismiss("cancel")},a.confirm=function(){angular.forEach(a.blockedUsers,function(c,d){c.isSelected&&h.unblock({id:a.relations[c.id]},function(){c.isUnblocked=!0},function(a){console.log(a)}).$promise.then(function(){d===a.blockedUsers.length-1&&b.close(!0)})})}}]),app.controller("ErrorCtrl",["$scope","$modalInstance","configurationService","error",function(a,b,c,d){a.showErrorDetails=!1,a.error=d,a.errorMessage="",a.modal_error_heading=c.getString("modal__error__heading"),a.button_ok=c.getString("button__ok"),null==a.error.status||null==a.error.data||0===a.error.status||-1===a.error.status?(c.setSettingValue("http_error",!0),a.errorMessage=c.getString("error__no_connection")):(500==a.error.data.status&&c.setSettingValue("http_error",!0),a.errorMessage=c.getString("error__api_bad_response"),a.errorDetails=c.getString("error__details",{status:a.error.data.status,error:a.error.data.title}),a.error_hide_text=c.getString("error__hide_text"),a.error_show_text=c.getString("error__show_text")),a.cancel=function(){b.dismiss("cancel")}}]);var serviceModule=angular.module("ComstackPMApp.Services",["ngResource"]);serviceModule.config(["$httpProvider",function(a){delete a.defaults.headers.common["X-Requested-With"],a.defaults.useXDomain=!0,a.defaults.withCredentials=!0}]),function(a){var b=a.module("ComstackPMApp.Services");b.factory("Authentication",["$http","$q","configurationService",function(a,b,c){var d=c.get(),e=atob(d.authorization_header.replace("Basic ","")),f=d.base_url.replace("https://","https://"+e+"@"),g=function(c,d){var e=b.defer();console.log("Starting form auth...");var g=f+"/home?destination=home",h="name="+c+"&login-do=yes&pass="+d+"&form_id=user_login_block&op=Sign+in";return a.post(g,h,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(a){console.log("Succeeded form auth..."),e.resolve(a)}).error(function(a,b){console.log("Failed form auth..."),e.reject(a)}),e.promise},h=function(){var c=b.defer();return console.log("Starting basic auth..."),a.get(f,{}).success(function(a){console.log("Succeeded basic auth..."),c.resolve(a)}).error(function(a,b){console.log("Failed basic auth..."),c.reject(a)}),c.promise},i=function(){var c=b.defer();return console.log("Starting get token..."),a.get(f+"/api/login-token",{}).success(function(a){console.log("Succeeded get token..."),c.resolve(a)}).error(function(a,b){console.log("Failed basic auth..."),c.reject(a)}),c.promise},j=function(){var c=b.defer();return console.log("Starting get token..."),a.get(f+"/api/session/token",{}).success(function(a){console.log("Succeeded get CSRFToken..."),c.resolve(a)}).error(function(a,b){console.log("Failed get CSRFToken..."),c.reject(a)}),c.promise},k=function(a,d){var e=b.defer();return h().then(function(b){console.log("Succeeded basic auth..."),g(a,d).then(function(a){console.log("Succeeded form auth..."),i().then(function(a){console.log("Succeeded get token..."),Comstack.PMApp.Settings.access_token=a.access_token,c.setSettingValue("access_token",a.access_token),j().then(function(a){console.log("Succeeded get CSRFToken..."),Comstack.PMApp.Settings.csrf_token=a["X-CSRF-Token"],c.setSettingValue("csrf_token",a["X-CSRF-Token"]),e.resolve(a)},function(a){console.log("Failed CSRFToken token..."),console.log(a),e.reject(a)})},function(a){console.log("Failed get token..."),console.log(a),e.reject(a)})},function(a){console.log("Failed form auth..."),console.log(a)})},function(a){console.log("Failed basic auth..."),console.log(a)}),e.promise};return{apiLogin:k}}])}(angular);var services=angular.module("ComstackPMApp.Services");services.factory("User",["$resource","configurationService",function(a,b){var c=b.get();return a("",{},{getCurrentUser:{method:"GET",url:c.api_url+"/cs-pm/users/current-user?access_token="+c.access_token,isArray:!1},getAvailableUsers:{method:"GET",url:c.api_url+"/cs-pm/users/available-users",params:{access_token:c.access_token,"autocomplete[string]":"@search"},isArray:!1},getBlockedUsers:{method:"GET",url:c.api_url+"/cs-fr/blocked",params:{access_token:c.access_token}},block:{method:"POST",url:c.api_url+"/cs-fr/blocked",params:{access_token:c.access_token},headers:{"X-CSRF-Token":c.csrf_token}},unblock:{method:"DELETE",url:c.api_url+"/cs-fr/blocked/:id",params:{access_token:c.access_token},headers:{"X-CSRF-Token":c.csrf_token}}})}]),services.factory("getCurrentUser",["User","$q",function(a,b){var c={};return c.get=function(){var c=b.defer();return a.getCurrentUser(function(a){c.resolve(a)},function(){c.reject("Unable to fetch current user")}),c.promise},c}]),services.factory("getAvailableUsers",["User","$q",function(a,b){var c={};return c.get=function(c){var d=b.defer();return a.getAvailableUsers({"autocomplete[string]":c},function(a){d.resolve(a)},function(){d.reject("Unable to fetch current user")}),d.promise},c}]);var services=angular.module("ComstackPMApp.Services");services.factory("Conversation",["$resource","configurationService",function(a,b){var c=b.get();return a(c.api_url+"/cs-pm/conversations/:id",{access_token:c.access_token,page:"@page"},{getMessages:{method:"GET",url:c.api_url+"/cs-pm/conversations/:id/messages/",params:{access_token:c.access_token,before:"",after:"",range:10},isArray:!1},reply:{method:"POST",url:c.api_url+"/cs-pm/conversations/:id/reply",params:{access_token:c.access_token},headers:{"X-CSRF-Token":c.csrf_token},isArray:!1},save:{method:"POST",headers:{"X-CSRF-Token":c.csrf_token}},"delete":{method:"DELETE",url:c.api_url+"/cs-pm/conversations/:id",params:{access_token:c.access_token},headers:{"X-CSRF-Token":c.csrf_token}},report:{method:"POST",url:c.api_url+"/cs-pm-report",params:{access_token:c.access_token},headers:{"X-CSRF-Token":c.csrf_token}},markAsRead:{method:"PUT",url:c.api_url+"/cs-pm/conversations/:id/mark-as-read",params:{access_token:c.access_token},headers:{"X-CSRF-Token":c.csrf_token},isArray:!1}})}]),services.factory("pollMessages",["Conversation","$q",function(a,b){var c={};return c.get=function(c,d,e,f){var g=b.defer();return a.getMessages({id:c,before:d,after:e,range:f},function(a){g.resolve(a)},function(){g.reject("Unable to fetch messages for conversation")}),g.promise},c}]);var services=angular.module("ComstackPMApp.Services");services.service("deleteConversationState",["$state","$modal",deleteConversationState]);var services=angular.module("ComstackPMApp.Services");services.service("reportConversationState",["$state","$modal",reportConversationState]);var services=angular.module("ComstackPMApp.Services");services.service("errorState",["$injector",errorState]);var services=angular.module("ComstackPMApp.Services");services.service("blockUserState",["$state","$modal",blockUserState]);var services=angular.module("ComstackPMApp.Services");services.service("unblockUserState",["$state","$modal",unblockUserState]);var services=angular.module("ComstackPMApp.Services");services.factory("requestInterceptor",["$q","configurationService","errorState","$window","$injector",function(a,b,c,d,e){function f(a){h.http_error||c.activate("html/error.html",a)}function g(){h.http_error&&e.get("poller").stopAll()}var h=b.get(),i=function(a){return-1!=a.url.indexOf(b.getSetting("api_url"))&&(angular.isUndefined(a.params)||angular.isUndefined(a.params.poll)||(a.params=a.params||{},a.params.before=b.getSetting("lastMessageId"))),a},j=function(b){return f(b),g(),a.reject(b)},k=function(b){return 401===b.status?(d.location.href=h.base_url,a.reject(b)):(console.log(b),f(b),g(),a.reject(b))};return{request:i,requestError:j,responseError:k}}]);