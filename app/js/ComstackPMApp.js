"use strict";var app=angular.module("ComstackPMApp",["ui.router","ComstackPMApp.Services"]);app.config(["$urlRouterProvider","$stateProvider",function(a,b){a.otherwise("/home"),b.state("Home",{url:"/home",controller:"HomeCtrl",templateUrl:"html/home.html"}).state("inbox",{url:"/inbox/:page",controller:"InboxCtrl",templateUrl:"html/inbox.html"})}]),app.filter("htmlsafe",["$sce",function(a){return function(b){return a.trustAsHtml(b)}}]),app.filter("truncate",[function(){return function(a,b,c){var d=a;return angular.isUndefined(a)?"":(angular.isUndefined(c)&&(c="..."),d.length>b&&(d=d.substr(0,b)+c),d)}}]),app.controller("HomeCtrl",["$scope","Authentication","$timeout","$state","$location",function(a,b,c,d,e){console.log(e.get()),""==ComstackPMAppDefaults.access_token?b.apiLogin().then(function(){console.log("Login done"),d.go("inbox",{page:1})},function(a){console.error(a)}):d.go("inbox",{page:1})}]),app.controller("InboxCtrl",["$scope","$window","$state","$stateParams","getCurrentUser","getConversations",function(a,b,c,d,e,f){a.conversations=[],a.paging={},a.currentUser={},e.get().then(function(b){a.currentUser=b}),f.get(d.page).then(function(b){a.conversations=b.data,a.paging=b.paging}),a.paging.pagesCount=0,a.pages=[],a.calculatePages=function(){a.paging.pagesCount=b.Math.ceil(a.paging.total/a.paging.range);for(var c=0;c<a.paging.pagesCount;c++)a.pages[c]={number:c+1}},a.goToPage=function(a){c.go("inbox",{page:a})},a.previous=function(){angular.isDefined(a.paging.previous)&&a.goToPage(a.paging.current_page-1)},a.next=function(){angular.isDefined(a.paging.next)&&a.goToPage(a.paging.current_page+1)},a.calculatePages()}]);var serviceModule=angular.module("ComstackPMApp.Services",["ngResource"]);serviceModule.config(["$httpProvider",function(a){delete a.defaults.headers.common["X-Requested-With"],a.defaults.useXDomain=!0,a.defaults.withCredentials=!0}]);var services=angular.module("ComstackPMApp.Services");services.factory("ConfigurationService",["$http",function(a){var b,c=function(){a.get("/app/config.json").success(function(a){b=a,e()})},d=function(a){b.access_token=a},e=function(){"undefined"!=typeof Comstack&&"undefined"!=typeof Comstack.PMApp&&"undefined"!=typeof Comstack.PMApp.Settings&&(console.log("merge globals"),angular.merge(b,Comstack.PMApp.Settings))},f=function(){return b};return c(),{appSettings:b,get:f,updateAccessToken:d,getLocalAppSettings:c}}]),function(a){var b=a.module("ComstackPMApp.Services");b.factory("Authentication",["$http","$q","ConfigurationService",function(a,b,c){var d=c.get(),e=atob(d.authorization_header),f=d.base_url.replace("https://","https://"+e+"@"),g=function(){var c=b.defer();console.log("Starting form auth...");var d=f+"/home?destination=home",e="name=basic_user_1&login-do=yes&pass=password&form_id=user_login_block&op=Sign+in";return a.post(d,e,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(a){console.log("Succeeded form auth..."),c.resolve(a)}).error(function(a,b){console.log("Failed form auth..."),c.reject(a)}),c.promise},h=function(){var c=b.defer();return console.log("Starting basic auth..."),a.get(f,{}).success(function(a){console.log("Succeeded basic auth..."),c.resolve(a)}).error(function(a,b){console.log("Failed basic auth..."),c.reject(a)}),c.promise},i=function(){var c=b.defer();return console.log("Starting get token..."),a.get(f+"/api/login-token",{}).success(function(a){console.log("Succeeded get token..."),c.resolve(a)}).error(function(a,b){console.log("Failed basic auth..."),c.reject(a)}),c.promise},j=function(){var a=b.defer();return h().then(function(b){console.log("Succeeded basic auth..."),g().then(function(b){console.log("Succeeded form auth..."),i().then(function(b){console.log("Succeeded get token..."),c.updateAccessToken(b.access_token),a.resolve(b)},function(b){console.log("Failed get token..."),console.log(b),a.reject(b)})},function(a){console.log("Failed form auth..."),console.log(a)})},function(a){console.log("Failed basic auth..."),console.log(a)}),a.promise};return{apiLogin:j}}])}(angular);var services=angular.module("ComstackPMApp.Services");services.factory("User",["$resource","ConfigurationService",function(a,b){var c=b.get();return a("",{},{getCurrentUser:{method:"GET",url:c.api_url+"/cs-pm/users/current-user?access_token="+c.access_token,isArray:!1}})}]),services.factory("getCurrentUser",["User","$q",function(a,b){var c={};return c.get=function(){var c=b.defer();return a.getCurrentUser(function(a){c.resolve(a)},function(){c.reject("Unable to fetch current user")}),c.promise},c}]);var services=angular.module("ComstackPMApp.Services");services.factory("Conversation",["$resource","ConfigurationService",function(a,b){var c=b.get();return a("/cs-pm/conversations",{},{get:{method:"GET",url:c.api_url+"/cs-pm/conversations?access_token="+c.access_token,params:{page:"@page"},isArray:!1}})}]),services.factory("getConversations",["Conversation","$q",function(a,b){var c={};return c.get=function(c){var d=b.defer();return a.get({page:c},function(a){d.resolve(a)},function(){d.reject("Unable to fetch the conversation")}),d.promise},c}]);